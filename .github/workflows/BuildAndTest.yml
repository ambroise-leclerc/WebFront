name: ${{ github.event_name == 'pull_request' && format('PR {0}', matrix.os) || matrix.os }}

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ master develop ]

env:
  BUILD_TYPE: Release

jobs:
  windows:
    name: Windows MSVC
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        
      - name: Config & Build
        run:  |
            cmake . -B ${{github.workspace}}/build
            cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
  
      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest --verbose -C ${{env.BUILD_TYPE}}

  ubuntu-gcc:
    name: Ubuntu GCC
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup GCC
        uses: egor-tensin/setup-gcc@v1.3
        with:
          version: 13
        
      - name: Config & Build
        run:  |
            cmake . -B ${{github.workspace}}/build
            cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
  
      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest --verbose -C ${{env.BUILD_TYPE}}

  ubuntu-clang:
    name: Ubuntu Clang
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        
      - name: Setup Clang
        uses: egor-tensin/setup-clang@v1.4
        with:
          version: 15

      - name: Config & Build
        run:  |
            cmake . -B ${{github.workspace}}/build
            cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
  
      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest --verbose -C ${{env.BUILD_TYPE}}

  macos:
    name: MacOS Clang
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Config & Build
        run:  |
            cmake . -B ${{github.workspace}}/build
            cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
  
      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest --verbose -C ${{env.BUILD_TYPE}}

