name: Build and Test

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ master develop ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        compiler: [msvc, gcc, clang]
        exclude:
        - os: windows-latest
          compiler: clang
        - os: windows-latest
          compiler: gcc
        - os: ubuntu-latest
          compiler: msvc
        - os: macos-latest
          compiler: msvc
        - os: macos-latest
          compiler: gcc
        - os: ubuntu-latest
          compiler: clang
    runs-on: ${{ matrix.os}}
    name: ${{ matrix.os }}-${{ matrix.compiler }}
      
    steps:
      - uses: actions/checkout@v4
        
      - name: Setup Clang
        uses: egor-tensin/setup-clang@v1.4
        with:
          version: 15
        if: matrix.os == 'ubuntu-latest' && matrix.compiler == 'clang'

      - name: Setup GCC
        uses: egor-tensin/setup-gcc@v1.3
        with:
          version: 13
        if: matrix.compiler == 'gcc'
        
      - name: Config & Build
        run: |
          cmake . -B ${{github.workspace}}/build
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
  
      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest --verbose -C ${{env.BUILD_TYPE}}

      - name: Prepare Badge Data
        if: always() && github.ref == 'refs/heads/master'
        id: badge
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "label=Windows MSVC" >> $GITHUB_OUTPUT
            echo "logo=windows" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" && "${{ matrix.compiler }}" == "gcc" ]]; then
            echo "label=Ubuntu GCC" >> $GITHUB_OUTPUT
            echo "logo=ubuntu" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" && "${{ matrix.compiler }}" == "clang" ]]; then
            echo "label=Ubuntu Clang" >> $GITHUB_OUTPUT
            echo "logo=ubuntu" >> $GITHUB_OUTPUT
          else
            echo "label=MacOS Clang" >> $GITHUB_OUTPUT
            echo "logo=apple" >> $GITHUB_OUTPUT
          fi
          if [[ "${{ job.status }}" == "success" ]]; then
            echo "color=2EA043" >> $GITHUB_OUTPUT
          elif [[ "${{ job.status }}" == "failure" ]]; then
            echo "color=E6484F" >> $GITHUB_OUTPUT
          else
            echo "color=DBAB0A" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Update Badge
        if: always() && github.ref == 'refs/heads/master'
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 317c22bfe80b2b51663187fbebfba533
          filename: ${{ matrix.os }}-${{ matrix.compiler }}.json
          label: ${{ steps.badge.outputs.label }}
          message: ${{ job.status }}
          color: ${{ steps.badge.outputs.color }}
          namedLogo: ${{ steps.badge.outputs.logo }}
          logoColor: white

